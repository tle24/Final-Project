[
  {
    "objectID": "docs/EDA.html",
    "href": "docs/EDA.html",
    "title": "EDA",
    "section": "",
    "text": "For this project, the Diabetes Health Indicators Dataset will be explored to see if there is a relationship between some variables and those with diabetes or prediabetes. This EDA will look at three variables in particular: high blood pressure, high cholesterol, and if there has been any physical activity in the past 30 days.\nThe ADA states that about two out of three people with diabetes report having high blood pressure. This would be an important variable to look at when looking at indicators to predict if someone has diabetes or not. Similarly, the ADA also states that people with diabetes are more prone to having high cholesterol. This could be because diabetes tend to lower “good” cholesterol and raise “bad” cholesterol. By looking at cholesterol, this can be an indicator of diabetes and would be a good variable to explore. Looking at the physical activity variable is important in predicting whether a person has diabetes or not because studies have shown that exercise can directly reduce blood glucose levels. This means that physical activity is a good way of preventing or controlling diabetes.\nIn this EDA, we will look at how these three variables relate to the response variable showing a person having diabetes are not. We will explore how the variables individually relate to the response variable as well as how they interact to give the response variable."
  },
  {
    "objectID": "docs/EDA.html#introduction",
    "href": "docs/EDA.html#introduction",
    "title": "EDA",
    "section": "",
    "text": "For this project, the Diabetes Health Indicators Dataset will be explored to see if there is a relationship between some variables and those with diabetes or prediabetes. This EDA will look at three variables in particular: high blood pressure, high cholesterol, and if there has been any physical activity in the past 30 days.\nThe ADA states that about two out of three people with diabetes report having high blood pressure. This would be an important variable to look at when looking at indicators to predict if someone has diabetes or not. Similarly, the ADA also states that people with diabetes are more prone to having high cholesterol. This could be because diabetes tend to lower “good” cholesterol and raise “bad” cholesterol. By looking at cholesterol, this can be an indicator of diabetes and would be a good variable to explore. Looking at the physical activity variable is important in predicting whether a person has diabetes or not because studies have shown that exercise can directly reduce blood glucose levels. This means that physical activity is a good way of preventing or controlling diabetes.\nIn this EDA, we will look at how these three variables relate to the response variable showing a person having diabetes are not. We will explore how the variables individually relate to the response variable as well as how they interact to give the response variable."
  },
  {
    "objectID": "docs/EDA.html#data",
    "href": "docs/EDA.html#data",
    "title": "EDA",
    "section": "Data",
    "text": "Data\n\n#library some packages\nlibrary(readr)\nlibrary(dplyr)\n\nThe first step is to read in the data set. For this section, all of the data will be displayed.\n\n#read in data\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\", col_types = c(\"Diabetes_binary\" = \"factor\", \"HighBP\" = \"factor\", \"HighChol\" = \"factor\", \"CholCheck\" = \"factor\", \"Smoker\" = \"factor\", \"Stroke\" = \"factor\", \"HeartDiseaseorAttack\" = \"factor\", \"PhysActivity\" = \"factor\", \"Fruits\" = \"factor\", \"Veggies\" = \"factor\", \"HvyAlcoholConsump\" = \"factor\", \"AnyHealthcare\" = \"factor\", \"NoDocbcCost\" = \"factor\", \"GenHlth\" = \"factor\", \"DiffWalk\" = \"factor\", \"Sex\" = \"factor\", \"Age\" = \"factor\", \"Education\" = \"factor\", \"Income\" = \"factor\")) |&gt;\n  mutate(Diabetes_binary = recode(Diabetes_binary, \"0.0\" = \"No diabetes\", \"1.0\" = \"Diabetes\")) |&gt;\n  mutate(HighBP = recode(HighBP, \"0.0\" = \"no high BP\", \"1.0\" = \"high BP\")) |&gt;\n  mutate(HighChol = recode(HighChol, \"0.0\" = \"no high cholesterol\", \"1.0\" = \"high cholesterol\")) |&gt;\n  mutate(CholCheck = recode(CholCheck, \"0.0\" = \"no cholesterol check\", \"1.0\" = \"cholesterol check\")) |&gt;\n  mutate(Smoker = recode(Smoker, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Stroke = recode(Stroke, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(HeartDiseaseorAttack = recode(HeartDiseaseorAttack, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(PhysActivity = recode(PhysActivity, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Fruits = recode(Fruits, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Veggies = recode(Veggies, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(HvyAlcoholConsump = recode(HvyAlcoholConsump, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(AnyHealthcare = recode(AnyHealthcare, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(NoDocbcCost = recode(NoDocbcCost, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Fruits = recode(Fruits, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(GenHlth = recode(GenHlth, \"1.0\" = \"excellent\", \"2.0\" = \"very good\", \"3.0\" = \"good\", \"4.0\" = \"fair\", \"5.0\" = \"poor\")) |&gt;\n  mutate(DiffWalk = recode(DiffWalk, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Sex = recode(Sex, \"0.0\" = \"female\", \"1.0\" = \"male\")) |&gt;\n  mutate(Age = recode(Age, \"1.0\" = \"18-24\", \"2.0\" = \"25-29\", \"3.0\" = \"30-34\", \"4.0\" = \"35-39\", \"5.0\" = \"40-44\", \"6.0\" = \"45-49\", \"7.0\" = \"50-54\", \"8.0\" = \"55-59\", \"9.0\" = \"60-64\", \"10.0\" = \"65-69\", \"11.0\" = \"70-74\", \"12.0\" = \"75-79\", \"13.0\" = \"80 or older\")) |&gt;\n  mutate(Education = recode(Education, \"1.0\" = \"never attended school\", \"2.0\" = \"elementary\", \"3.0\" = \"junior high\", \"4.0\" = \"high school\", \"5.0\" = \"undergraduate\", \"6.0\" = \"postgraduate\")) |&gt;\n  mutate(Income = recode(Income, \"1.0\" = \"less than $10,000\", \"2.0\" = \"less than $15,000\", \"3.0\" = \"less than $20,000\", \"4.0\" = \"less than $$25,000\", \"5.0\" = \"less than $35,000\", \"6.0\" = \"less than $50,000\", \"7.0\" = \"less than $75,000\", \"8.0\" = \"$75,000 or more\"))\n\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP     HighChol            CholCheck    BMI Smoker Stroke\n   &lt;fct&gt;           &lt;fct&gt;      &lt;fct&gt;               &lt;fct&gt;      &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt; \n 1 No diabetes     high BP    high cholesterol    cholester…    40 Yes    No    \n 2 No diabetes     no high BP no high cholesterol no choles…    25 Yes    No    \n 3 No diabetes     high BP    high cholesterol    cholester…    28 No     No    \n 4 No diabetes     high BP    no high cholesterol cholester…    27 No     No    \n 5 No diabetes     high BP    high cholesterol    cholester…    24 No     No    \n 6 No diabetes     high BP    high cholesterol    cholester…    25 Yes    No    \n 7 No diabetes     high BP    no high cholesterol cholester…    30 Yes    No    \n 8 No diabetes     high BP    high cholesterol    cholester…    25 Yes    No    \n 9 Diabetes        high BP    high cholesterol    cholester…    30 Yes    No    \n10 No diabetes     no high BP no high cholesterol cholester…    24 No     No    \n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;fct&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;fct&gt;, Education &lt;fct&gt;, Income &lt;fct&gt;\n\n\n\n#check for missing data\nsum(is.na(diabetes_data))\n\n[1] 0\n\n\nThere are no missing data in this data set."
  },
  {
    "objectID": "docs/EDA.html#summarizations",
    "href": "docs/EDA.html#summarizations",
    "title": "EDA",
    "section": "Summarizations",
    "text": "Summarizations\nFor the Summarization section of this EDA, summary statistics and plots will be made focusing on the response variable Diabetes_binary and the three explanatory variables high blood pressure, high cholesterol, and physical activity.\n\n#library some packages\nlibrary(ggplot2)\n\nFirst, we will make some contingency tables and plots to look at the proportion of the data with diabetes.\n\n#contingency table of Diabetes_binary\ntable(diabetes_data$Diabetes_binary)\n\n\nNo diabetes    Diabetes \n     218334       35346 \n\n\n\n#bar plot of Diabetes_binary\nggplot(diabetes_data, aes(x = Diabetes_binary, fill = Diabetes_binary)) +\n  geom_bar() +\n  labs(x = \"Diabetes\", y = \"Count\", title = \"Bar Plot of Proportion of Diabetes\") +\n  scale_fill_discrete(name = \"Diabetes\")\n\n\n\n\n\n\n\n\nLooking at both the contingency table and the bar plot, there seems to be a higher proportion of the data set that reports not having diabetes compared to having diabetes.\nNext, we will compare each of the three explanatory variables separately with the response variable. we will start with the relationship between high blood pressure and diabetes. A contingency table and barplot can be made to show this relationship.\n\n#contingency table of Diabetes_binary and HighBP\ntable(diabetes_data$Diabetes_binary, diabetes_data$HighBP)\n\n             \n              high BP no high BP\n  No diabetes   82225     136109\n  Diabetes      26604       8742\n\n\n\n#barplot of Diabetes_binary and HighBP\nggplot(diabetes_data, aes(x = HighBP, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"High Blood Pressure\", fill = \"Diabetes\", y = \"Count\")\n\n\n\n\n\n\n\n\nIt looks like those with diabetes are more likely to have high blood pressure than not, while those without diabetes tend to not have high blood pressure.\nNow for the relationship between high cholesterol and diabetes. We use the contingency table and bar plot to show the relationship.\n\n#contingency table of Diabetes_binary and HighChol\ntable(diabetes_data$Diabetes_binary, diabetes_data$HighChol)\n\n             \n              high cholesterol no high cholesterol\n  No diabetes            83905              134429\n  Diabetes               23686               11660\n\n\n\n#barplot of Diabetes_binary and HighChol\nggplot(diabetes_data, aes(x = HighChol, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"High Cholesterol\", fill = \"Diabetes\", y = \"Count\")\n\n\n\n\n\n\n\n\nThere seems to be a similar relationship between having high cholesterol and having diabetes to the relationship between high blood pressure and diabetes.\nThe last variable we will look at is the relationship between physical activity and diabetes.\n\n#contingency table of Diabetes_binary and PhysAtivity\ntable(diabetes_data$Diabetes_binary, diabetes_data$PhysActivity)\n\n             \n                  No    Yes\n  No diabetes  48701 169633\n  Diabetes     13059  22287\n\n\n\n#bar plot of Diabetes_binary and PhysActivity\nggplot(diabetes_data, aes(x = PhysActivity, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\") +\n  labs(x = \"Physical Activity\", fill = \"Diabetes\", y = \"Count\")\n\n\n\n\n\n\n\n\nThe relationship between doing physical activities within the last 30 days and having diabetes is different than the other variables. We see that both people with and without diabetes have had some physical activity. This may show that physical activity does not cause or prevent diabetes, but is a good way to control diabetes in those that already are diagnosed.\nWhile looking at the relationship between the response variable and a single explanatory variable is useful, we can also look at how multiple variables work together and their relationship with the response variable. We can look first at correlation between high blood pressure and high cholesterol in relation to diabetes.\n\n#contingency table of HighBP and HighChol compared to Diabetes_binary\ntable(diabetes_data$HighBP, diabetes_data$HighChol, diabetes_data$Diabetes_binary)\n\n, ,  = No diabetes\n\n            \n             high cholesterol no high cholesterol\n  high BP               45447               36778\n  no high BP            38458               97651\n\n, ,  = Diabetes\n\n            \n             high cholesterol no high cholesterol\n  high BP               19213                7391\n  no high BP             4473                4269\n\n\n\n#bar plot of HighBP and HighChol compared to Diabetes_binary\nggplot(diabetes_data, aes(x = HighBP, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\") +\n  facet_wrap(~ HighChol) +\n  labs(x = \"High Blood Pressure\", fill = \"Diabetes\", title = \"Bar Plot of High BP and High Cholesterol in Relation to Diabetes\")\n\n\n\n\n\n\n\n\nLooking at the contingency table and the bar plot showing how diabetes relate to high blood pressure and high cholesterol, we can see that the highest proportion of those with diabetes have both high blood pressure and high cholesterol. This shows that having high blood pressure along with high cholesterol can lead to having diabetes. Following this, the next highest proportion of those with diabetes have high blood pressure, but does not have high cholesterol. This could show that blood pressure is a better indicator when it comes to diagnosing diabetes.\nWe can continue this, adding physical activity to see its relationship with high blood pressure and high cholesterol.\n\n#contingency table of HighBP and PhysActivity compared to Diabetes_binary\ntable(diabetes_data$HighBP, diabetes_data$PhysActivity, diabetes_data$Diabetes_binary)\n\n, ,  = No diabetes\n\n            \n                 No    Yes\n  high BP     22961  59264\n  no high BP  25740 110369\n\n, ,  = Diabetes\n\n            \n                 No    Yes\n  high BP     10284  16320\n  no high BP   2775   5967\n\n\n\n#bar plot of HighBP and PhysActivity compared to Diabetes_binary\nggplot(diabetes_data, aes(x = PhysActivity, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\") +\n  facet_wrap(~ HighBP) +\n  labs(x = \"Physical Activity\", fill = \"Diabetes\", title = \"Bar Plot of Physical Activity  and High BP in Relation to Diabetes\")\n\n\n\n\n\n\n\n\nWe can see that for those with diabetes, physical activity contributes less to the proportions than having high blood pressure. This could mean that physical activity would not be a great indicator to predict whether a person has diabetes or not.\nWe can compare that relationship to physical activity and high cholesterol.\n\n#contingency table of HighChol and PhysActivity compared to Diabetes_binary\ntable(diabetes_data$HighChol, diabetes_data$PhysActivity, diabetes_data$Diabetes_binary)\n\n, ,  = No diabetes\n\n                     \n                          No    Yes\n  high cholesterol     21340  62565\n  no high cholesterol  27361 107068\n\n, ,  = Diabetes\n\n                     \n                          No    Yes\n  high cholesterol      9053  14633\n  no high cholesterol   4006   7654\n\n\n\n#bar plot of HighChol and PhysActivity compared to Diabetes_binary\nggplot(diabetes_data, aes(x = PhysActivity, fill = Diabetes_binary)) +\n  geom_bar(position = \"dodge\") +\n  facet_wrap(~ HighChol) +\n  labs(x = \"Physical Activity\", fill = \"Diabetes\", title = \"Bar Plot of Physical Activity  and High Cholesterol in Relation to Diabetes\")\n\n\n\n\n\n\n\n\nIt seems like the relationship is similar with having high cholesterol being a bigger indicator of diabetes than physical activity.\nIn summary of this EDA, we can compare different variables through statistical summaries and plots to show the relationship they have with the response variable of Diabetes_binary. After exploring three of the variables, we can conclude that having high blood pressure is a good indicator of having diabetes. Having high cholesterol can also contribute to having diabetes, but physical activity may not be the best at showing whether a person has diabetes. We will be able to use this information in the modeling by using variables that are better indicators of diabetes than others to be able to fit a model that can predict diabetes in a person well.\nClick here for the Modeling Page"
  },
  {
    "objectID": "docs/Modeling.html",
    "href": "docs/Modeling.html",
    "title": "Modeling",
    "section": "",
    "text": "For this modeling section of the project, we will fit the diabetes data to different models to see which would be the best at predicting whether a person has diabetes or not. For the data we will fit three logistic regression models with different variables, a classification tree, and a random forest model. The log loss metric will be used to show how well the models are doing at predictions. This metric compares the prediction to the true value to determine a value for the model.\n\n#library some packages\nlibrary(readr)\nlibrary(dplyr)\n\n\n#read in data\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\", col_types = c(\"Diabetes_binary\" = \"factor\", \"HighBP\" = \"factor\", \"HighChol\" = \"factor\", \"CholCheck\" = \"factor\", \"Smoker\" = \"factor\", \"Stroke\" = \"factor\", \"HeartDiseaseorAttack\" = \"factor\", \"PhysActivity\" = \"factor\", \"Fruits\" = \"factor\", \"Veggies\" = \"factor\", \"HvyAlcoholConsump\" = \"factor\", \"AnyHealthcare\" = \"factor\", \"NoDocbcCost\" = \"factor\", \"GenHlth\" = \"factor\", \"DiffWalk\" = \"factor\", \"Sex\" = \"factor\", \"Age\" = \"factor\", \"Education\" = \"factor\", \"Income\" = \"factor\")) |&gt;\n  mutate(Diabetes_binary = recode(Diabetes_binary, \"0.0\" = \"No diabetes\", \"1.0\" = \"Diabetes\")) |&gt;\n  mutate(HighBP = recode(HighBP, \"0.0\" = \"no high BP\", \"1.0\" = \"high BP\")) |&gt;\n  mutate(HighChol = recode(HighChol, \"0.0\" = \"no high cholesterol\", \"1.0\" = \"high cholesterol\")) |&gt;\n  mutate(CholCheck = recode(CholCheck, \"0.0\" = \"no cholesterol check\", \"1.0\" = \"cholesterol check\")) |&gt;\n  mutate(Smoker = recode(Smoker, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Stroke = recode(Stroke, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(HeartDiseaseorAttack = recode(HeartDiseaseorAttack, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(PhysActivity = recode(PhysActivity, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Fruits = recode(Fruits, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Veggies = recode(Veggies, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(HvyAlcoholConsump = recode(HvyAlcoholConsump, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(AnyHealthcare = recode(AnyHealthcare, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(NoDocbcCost = recode(NoDocbcCost, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Fruits = recode(Fruits, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(GenHlth = recode(GenHlth, \"1.0\" = \"excellent\", \"2.0\" = \"very good\", \"3.0\" = \"good\", \"4.0\" = \"fair\", \"5.0\" = \"poor\")) |&gt;\n  mutate(DiffWalk = recode(DiffWalk, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Sex = recode(Sex, \"0.0\" = \"female\", \"1.0\" = \"male\")) |&gt;\n  mutate(Age = recode(Age, \"1.0\" = \"18-24\", \"2.0\" = \"25-29\", \"3.0\" = \"30-34\", \"4.0\" = \"35-39\", \"5.0\" = \"40-44\", \"6.0\" = \"45-49\", \"7.0\" = \"50-54\", \"8.0\" = \"55-59\", \"9.0\" = \"60-64\", \"10.0\" = \"65-69\", \"11.0\" = \"70-74\", \"12.0\" = \"75-79\", \"13.0\" = \"80 or older\")) |&gt;\n  mutate(Education = recode(Education, \"1.0\" = \"never attended school\", \"2.0\" = \"elementary\", \"3.0\" = \"junior high\", \"4.0\" = \"high school\", \"5.0\" = \"undergraduate\", \"6.0\" = \"postgraduate\")) |&gt;\n  mutate(Income = recode(Income, \"1.0\" = \"less than $10,000\", \"2.0\" = \"less than $15,000\", \"3.0\" = \"less than $20,000\", \"4.0\" = \"less than $$25,000\", \"5.0\" = \"less than $35,000\", \"6.0\" = \"less than $50,000\", \"7.0\" = \"less than $75,000\", \"8.0\" = \"$75,000 or more\"))\n\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP     HighChol            CholCheck    BMI Smoker Stroke\n   &lt;fct&gt;           &lt;fct&gt;      &lt;fct&gt;               &lt;fct&gt;      &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt; \n 1 No diabetes     high BP    high cholesterol    cholester…    40 Yes    No    \n 2 No diabetes     no high BP no high cholesterol no choles…    25 Yes    No    \n 3 No diabetes     high BP    high cholesterol    cholester…    28 No     No    \n 4 No diabetes     high BP    no high cholesterol cholester…    27 No     No    \n 5 No diabetes     high BP    high cholesterol    cholester…    24 No     No    \n 6 No diabetes     high BP    high cholesterol    cholester…    25 Yes    No    \n 7 No diabetes     high BP    no high cholesterol cholester…    30 Yes    No    \n 8 No diabetes     high BP    high cholesterol    cholester…    25 Yes    No    \n 9 Diabetes        high BP    high cholesterol    cholester…    30 Yes    No    \n10 No diabetes     no high BP no high cholesterol cholester…    24 No     No    \n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;fct&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;fct&gt;, Education &lt;fct&gt;, Income &lt;fct&gt;"
  },
  {
    "objectID": "docs/Modeling.html#introduction",
    "href": "docs/Modeling.html#introduction",
    "title": "Modeling",
    "section": "",
    "text": "For this modeling section of the project, we will fit the diabetes data to different models to see which would be the best at predicting whether a person has diabetes or not. For the data we will fit three logistic regression models with different variables, a classification tree, and a random forest model. The log loss metric will be used to show how well the models are doing at predictions. This metric compares the prediction to the true value to determine a value for the model.\n\n#library some packages\nlibrary(readr)\nlibrary(dplyr)\n\n\n#read in data\ndiabetes_data &lt;- read_csv(\"diabetes_binary_health_indicators_BRFSS2015.csv\", col_types = c(\"Diabetes_binary\" = \"factor\", \"HighBP\" = \"factor\", \"HighChol\" = \"factor\", \"CholCheck\" = \"factor\", \"Smoker\" = \"factor\", \"Stroke\" = \"factor\", \"HeartDiseaseorAttack\" = \"factor\", \"PhysActivity\" = \"factor\", \"Fruits\" = \"factor\", \"Veggies\" = \"factor\", \"HvyAlcoholConsump\" = \"factor\", \"AnyHealthcare\" = \"factor\", \"NoDocbcCost\" = \"factor\", \"GenHlth\" = \"factor\", \"DiffWalk\" = \"factor\", \"Sex\" = \"factor\", \"Age\" = \"factor\", \"Education\" = \"factor\", \"Income\" = \"factor\")) |&gt;\n  mutate(Diabetes_binary = recode(Diabetes_binary, \"0.0\" = \"No diabetes\", \"1.0\" = \"Diabetes\")) |&gt;\n  mutate(HighBP = recode(HighBP, \"0.0\" = \"no high BP\", \"1.0\" = \"high BP\")) |&gt;\n  mutate(HighChol = recode(HighChol, \"0.0\" = \"no high cholesterol\", \"1.0\" = \"high cholesterol\")) |&gt;\n  mutate(CholCheck = recode(CholCheck, \"0.0\" = \"no cholesterol check\", \"1.0\" = \"cholesterol check\")) |&gt;\n  mutate(Smoker = recode(Smoker, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Stroke = recode(Stroke, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(HeartDiseaseorAttack = recode(HeartDiseaseorAttack, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(PhysActivity = recode(PhysActivity, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Fruits = recode(Fruits, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Veggies = recode(Veggies, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(HvyAlcoholConsump = recode(HvyAlcoholConsump, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(AnyHealthcare = recode(AnyHealthcare, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(NoDocbcCost = recode(NoDocbcCost, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Fruits = recode(Fruits, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(GenHlth = recode(GenHlth, \"1.0\" = \"excellent\", \"2.0\" = \"very good\", \"3.0\" = \"good\", \"4.0\" = \"fair\", \"5.0\" = \"poor\")) |&gt;\n  mutate(DiffWalk = recode(DiffWalk, \"0.0\" = \"No\", \"1.0\" = \"Yes\")) |&gt;\n  mutate(Sex = recode(Sex, \"0.0\" = \"female\", \"1.0\" = \"male\")) |&gt;\n  mutate(Age = recode(Age, \"1.0\" = \"18-24\", \"2.0\" = \"25-29\", \"3.0\" = \"30-34\", \"4.0\" = \"35-39\", \"5.0\" = \"40-44\", \"6.0\" = \"45-49\", \"7.0\" = \"50-54\", \"8.0\" = \"55-59\", \"9.0\" = \"60-64\", \"10.0\" = \"65-69\", \"11.0\" = \"70-74\", \"12.0\" = \"75-79\", \"13.0\" = \"80 or older\")) |&gt;\n  mutate(Education = recode(Education, \"1.0\" = \"never attended school\", \"2.0\" = \"elementary\", \"3.0\" = \"junior high\", \"4.0\" = \"high school\", \"5.0\" = \"undergraduate\", \"6.0\" = \"postgraduate\")) |&gt;\n  mutate(Income = recode(Income, \"1.0\" = \"less than $10,000\", \"2.0\" = \"less than $15,000\", \"3.0\" = \"less than $20,000\", \"4.0\" = \"less than $$25,000\", \"5.0\" = \"less than $35,000\", \"6.0\" = \"less than $50,000\", \"7.0\" = \"less than $75,000\", \"8.0\" = \"$75,000 or more\"))\n\ndiabetes_data\n\n# A tibble: 253,680 × 22\n   Diabetes_binary HighBP     HighChol            CholCheck    BMI Smoker Stroke\n   &lt;fct&gt;           &lt;fct&gt;      &lt;fct&gt;               &lt;fct&gt;      &lt;dbl&gt; &lt;fct&gt;  &lt;fct&gt; \n 1 No diabetes     high BP    high cholesterol    cholester…    40 Yes    No    \n 2 No diabetes     no high BP no high cholesterol no choles…    25 Yes    No    \n 3 No diabetes     high BP    high cholesterol    cholester…    28 No     No    \n 4 No diabetes     high BP    no high cholesterol cholester…    27 No     No    \n 5 No diabetes     high BP    high cholesterol    cholester…    24 No     No    \n 6 No diabetes     high BP    high cholesterol    cholester…    25 Yes    No    \n 7 No diabetes     high BP    no high cholesterol cholester…    30 Yes    No    \n 8 No diabetes     high BP    high cholesterol    cholester…    25 Yes    No    \n 9 Diabetes        high BP    high cholesterol    cholester…    30 Yes    No    \n10 No diabetes     no high BP no high cholesterol cholester…    24 No     No    \n# ℹ 253,670 more rows\n# ℹ 15 more variables: HeartDiseaseorAttack &lt;fct&gt;, PhysActivity &lt;fct&gt;,\n#   Fruits &lt;fct&gt;, Veggies &lt;fct&gt;, HvyAlcoholConsump &lt;fct&gt;, AnyHealthcare &lt;fct&gt;,\n#   NoDocbcCost &lt;fct&gt;, GenHlth &lt;fct&gt;, MentHlth &lt;dbl&gt;, PhysHlth &lt;dbl&gt;,\n#   DiffWalk &lt;fct&gt;, Sex &lt;fct&gt;, Age &lt;fct&gt;, Education &lt;fct&gt;, Income &lt;fct&gt;"
  },
  {
    "objectID": "docs/Modeling.html#splitting-data",
    "href": "docs/Modeling.html#splitting-data",
    "title": "Modeling",
    "section": "Splitting Data",
    "text": "Splitting Data\nFirst, we need to split the data so that we have a training set and a testing set. The testing data will be set aside to test how well the model does at the end. With the training set, we can also separate them into cv folds to use them in cross validation when fitting a model.\n\n#library some packages\nlibrary(tidymodels)\nlibrary(tidyverse)\nlibrary(caret)\nlibrary(yardstick)\nlibrary(glmnet)\nlibrary(rpart)\nlibrary(parsnip)\nlibrary(dials)\nlibrary(ranger)\n\n\n#split data into training and test set\nset.seed(145)\nsplit &lt;- initial_split(diabetes_data, prop = 0.7)\ndiabetes_train &lt;- training(split)\ndiabetes_test &lt;- testing(split)\n\n#create 10 cv folds on training data\ndiabetes_cv &lt;- vfold_cv(diabetes_train, 10)"
  },
  {
    "objectID": "docs/Modeling.html#logistic-regression-models",
    "href": "docs/Modeling.html#logistic-regression-models",
    "title": "Modeling",
    "section": "Logistic Regression Models",
    "text": "Logistic Regression Models\nLogistic regression models are a type of predictive modeling that can be used for binary classification variables, meaning that there is only two options for the response variable. Logistic regression deals with probabilities of data, so the model will always be between 0 and 1. We will be using logistic regression models to fit the diabetes data because our response variable of Diabetes_binary is binary and we will be able to use the model to predict whether a person has diabetes or not. We will fit three models to compare and determine the best logistic regression model for predicting diabetes.\n\nFit 3 Models\n\n#model 1 - Age, Sex, HighBP, HighChol, PhysActivity\nlr1_rec &lt;- recipe(Diabetes_binary ~ Age + Sex + HighBP + HighChol + PhysActivity, data = diabetes_train) |&gt;\n  step_dummy(Age, Sex, HighBP, HighChol, PhysActivity)\nlr1_spec &lt;- logistic_reg() |&gt;\n  set_engine(\"glm\")\nlr1_wkf &lt;- workflow() |&gt;\n  add_recipe(lr1_rec) |&gt;\n  add_model(lr1_spec)\n\n#fit lr1 model to cv folds\nlr1_fit &lt;- lr1_wkf |&gt;\n  fit_resamples(diabetes_cv, metrics = metric_set(mn_log_loss))\n\n\n#model 2 - HighBP, HighChol, BMI, Stroke, HeartDiseaseorAttack\nlr2_rec &lt;- recipe(Diabetes_binary ~ HighBP + HighChol + BMI + Stroke + HeartDiseaseorAttack, data = diabetes_train) |&gt;\n  step_dummy(HighBP, HighChol, Stroke, HeartDiseaseorAttack)\nlr2_spec &lt;- logistic_reg() |&gt;\n  set_engine(\"glm\")\nlr2_wkf &lt;- workflow() |&gt;\n  add_recipe(lr2_rec) |&gt;\n  add_model(lr2_spec)\n\n#fit lr2 model to cv folds\nlr2_fit &lt;- lr2_wkf |&gt;\n  fit_resamples(diabetes_cv, metrics = metric_set(mn_log_loss))\n\n\n#model 3 - Smoker, Fruits, Veggies, HvyAlcoholConsump\nlr3_rec &lt;- recipe(Diabetes_binary ~ Smoker + Fruits + Veggies + HvyAlcoholConsump, data = diabetes_train) |&gt;\n  step_dummy(Smoker, Fruits, Veggies, HvyAlcoholConsump)\nlr3_spec &lt;- logistic_reg() |&gt;\n  set_engine(\"glm\")\nlr3_wkf &lt;- workflow() |&gt;\n  add_recipe(lr3_rec) |&gt;\n  add_model(lr3_spec)\n\n#fit lr3 model to cv folds\nlr3_fit &lt;- lr3_wkf |&gt;\n  fit_resamples(diabetes_cv, metrics = metric_set(mn_log_loss))\n\n\n\nDetermine Best Model\n\n#compare log loss metric of models\nrbind(lr1_fit |&gt; collect_metrics(),\n      lr2_fit |&gt; collect_metrics(),\n      lr3_fit |&gt; collect_metrics()) |&gt;\n  mutate(Model = c(\"LR Model 1\", \"LR Model 2\", \"LR Model 3\"))\n\n# A tibble: 3 × 7\n  .metric     .estimator  mean     n std_err .config              Model     \n  &lt;chr&gt;       &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;     \n1 mn_log_loss binary     0.352    10 0.00160 Preprocessor1_Model1 LR Model 1\n2 mn_log_loss binary     0.345    10 0.00165 Preprocessor1_Model1 LR Model 2\n3 mn_log_loss binary     0.399    10 0.00158 Preprocessor1_Model1 LR Model 3\n\n\nFrom the three logistic regression models, the best model is the second model with the lowest log loss metric."
  },
  {
    "objectID": "docs/Modeling.html#classification-tree",
    "href": "docs/Modeling.html#classification-tree",
    "title": "Modeling",
    "section": "Classification Tree",
    "text": "Classification Tree\nA classification tree is a type of predictive modeling that can be easy to interpret and split into decisions that is made based on predictors. As a decision tree is made, it is split based on the next best predictor to eventually arrive at a final prediction. A classification tree can be used on the diabetes data as there are multiple predictors that a decision tree can use and will be able to come to a prediction based on these predictors. We will create classification trees with different values of cost complexity to determine the best model to fit the data.\n\n#create model workflow\ntree_rec &lt;- recipe(Diabetes_binary ~ HighBP + HighChol + Stroke + HeartDiseaseorAttack, data = diabetes_train) |&gt;\n  step_dummy(HighBP, HighChol, Stroke, HeartDiseaseorAttack)\ntree_spec &lt;- decision_tree(cost_complexity = tune()) |&gt;\n  set_engine(\"rpart\") |&gt;\n  set_mode(\"classification\")\ntree_wkf &lt;- workflow() |&gt;\n  add_recipe(tree_rec) |&gt;\n  add_model(tree_spec)\n\n#tune with various cost complexity\ntree_fit &lt;- tree_wkf |&gt;\n  tune_grid(resamples = diabetes_cv,\n            grid = grid_regular(cost_complexity(), levels = 5),\n            metrics = metric_set(mn_log_loss))\n\n\n#choose best classification tree model\ntree_best_params &lt;- select_best(tree_fit, metric = \"mn_log_loss\")\ntree_final_wkf &lt;- tree_wkf |&gt;\n  finalize_workflow(tree_best_params)"
  },
  {
    "objectID": "docs/Modeling.html#random-forest",
    "href": "docs/Modeling.html#random-forest",
    "title": "Modeling",
    "section": "Random Forest",
    "text": "Random Forest\nA random forest model is similar to the classification tree as there is a decision tree being made. However, in random forest, many decision trees are made and the predictions are combined to come up with the best prediction of the data. Each tree of the random forest model picks a few features at random to split the decision tree, helping to avoid over fitting the data. We will use a random forest model on the diabetes data to come up with the best predictions.\n\n#create model workflow\nrf_rec &lt;- recipe(Diabetes_binary ~ HighBP + HighChol + PhysActivity, data = diabetes_train) |&gt;\n  step_dummy(HighBP, HighChol, PhysActivity)\nrf_spec &lt;- rand_forest(mtry = tune()) |&gt;\n  set_engine(\"ranger\") |&gt;\n  set_mode(\"classification\")\nrf_wkf &lt;- workflow() |&gt;\n  add_recipe(rf_rec) |&gt;\n  add_model(rf_spec)\n\n#tune with mtry\nrf_fit &lt;- rf_wkf |&gt;\n  tune_grid(resamples = diabetes_cv,\n            grid = 5,\n            metrics = metric_set(mn_log_loss))\n\ni Creating pre-processing data to finalize unknown parameter: mtry\n\n\n\n#choose best random forest model\nrf_best_params &lt;- select_best(rf_fit, metric = \"mn_log_loss\")\nrf_final_wkf &lt;- rf_wkf |&gt;\n  finalize_workflow(rf_best_params)"
  },
  {
    "objectID": "docs/Modeling.html#final-model-selection",
    "href": "docs/Modeling.html#final-model-selection",
    "title": "Modeling",
    "section": "Final Model Selection",
    "text": "Final Model Selection\nWith the best logistic regression model, the best classification model, and the best random forest model determined, we will compare all the models on the test set to decide which model will be the best overall.\n\n#fit each model with the training and test data\nlr_final_fit &lt;- lr2_wkf |&gt;\n  last_fit(split, metrics = metric_set(mn_log_loss))\ntree_final_fit &lt;- tree_final_wkf |&gt;\n  last_fit(split, metrics = metric_set(mn_log_loss))\nrf_final_fit &lt;- rf_final_wkf |&gt;\n  last_fit(split, metrics = metric_set(mn_log_loss))\n\n#compare log loss of the three models\nrbind(lr_final_fit |&gt; collect_metrics(),\n      tree_final_fit |&gt; collect_metrics(),\n      rf_final_fit |&gt; collect_metrics()) |&gt;\n  mutate(Model = c(\"LR Model\", \"Tree Model\", \"Random Forest Model\"))\n\n# A tibble: 3 × 5\n  .metric     .estimator .estimate .config              Model              \n  &lt;chr&gt;       &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;              \n1 mn_log_loss binary         0.341 Preprocessor1_Model1 LR Model           \n2 mn_log_loss binary         0.402 Preprocessor1_Model1 Tree Model         \n3 mn_log_loss binary         0.355 Preprocessor1_Model1 Random Forest Model\n\n\nWhen testing the best of each type of model using the test data and comparing the log loss, it looks like the best model to predict whether a person has diabetes or not is the logistic regression model.\n\n#look at coefficients of best model\nbest_model &lt;- lr2_wkf |&gt;\n  fit(diabetes_data)\ntidy(best_model)\n\n# A tibble: 6 × 5\n  term                         estimate std.error statistic  p.value\n  &lt;chr&gt;                           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)                   -3.02    0.0277      -109.  0       \n2 BMI                            0.0646  0.000836      77.3 0       \n3 HighBP_no.high.BP             -1.15    0.0140       -82.3 0       \n4 HighChol_no.high.cholesterol  -0.743   0.0132       -56.5 0       \n5 Stroke_Yes                     0.511   0.0243        21.0 8.31e-98\n6 HeartDiseaseorAttack_Yes       0.712   0.0168        42.4 0       \n\n\nThe logistic regression model would be Diabetes_binary ~ -3.02367993 + 0.06461834BMI + -1.15403139HighBP + -0.74280903HighChol + 0.51060086Stroke + 0.71177963*HeartDiseaseorAttack."
  }
]